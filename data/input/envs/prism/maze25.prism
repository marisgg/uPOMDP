pomdp
observables

	o
endobservables
const double sl;
const int K = 25;
formula total_states = K * 3 + 7;
 formula bottom_left = s = total_states - 2;
 formula bottom_right = s = total_states - 1;
 formula above_center = s = total_states - 4;
 formula above_right = s = total_states - 3;
 formula above_left = s = total_states - 5;
 formula final_line = s <= total_states & s > total_states - 3;
 formula down_obs_side = final_line ? 6: 5;
 formula down_obs_center = final_line ? 7: 5;
 formula inside_tunnel = s > 7 & s < total_states - 5;

module maze

	s: [-1..82] init -1;
	o : [0..7];

	[] s=-1 ->1/81 : (s'=0) & (o'=1)+ 1/81 : (s'=1) & (o'=2)+ 1/81 : (s'=2) & (o'=3)+ 1/81 : (s'=3) & (o'=2)+ 1/81 : (s'=4) & (o'=4)+ 1/81 : (s'=5) & (o'=5)+ 1/81 : (s'=6) & (o'=5)+ 1/81 : (s'=7) & (o'=5)+ 1/81 : (s'=8) & (o'=5)+ 1/81 : (s'=9) & (o'=5)+ 1/81 : (s'=10) & (o'=5)+ 1/81 : (s'=11) & (o'=5)+ 1/81 : (s'=12) & (o'=5)+ 1/81 : (s'=13) & (o'=5)+ 1/81 : (s'=14) & (o'=5)+ 1/81 : (s'=15) & (o'=5)+ 1/81 : (s'=16) & (o'=5)+ 1/81 : (s'=17) & (o'=5)+ 1/81 : (s'=18) & (o'=5)+ 1/81 : (s'=19) & (o'=5)+ 1/81 : (s'=20) & (o'=5)+ 1/81 : (s'=21) & (o'=5)+ 1/81 : (s'=22) & (o'=5)+ 1/81 : (s'=23) & (o'=5)+ 1/81 : (s'=24) & (o'=5)+ 1/81 : (s'=25) & (o'=5)+ 1/81 : (s'=26) & (o'=5)+ 1/81 : (s'=27) & (o'=5)+ 1/81 : (s'=28) & (o'=5)+ 1/81 : (s'=29) & (o'=5)+ 1/81 : (s'=30) & (o'=5)+ 1/81 : (s'=31) & (o'=5)+ 1/81 : (s'=32) & (o'=5)+ 1/81 : (s'=33) & (o'=5)+ 1/81 : (s'=34) & (o'=5)+ 1/81 : (s'=35) & (o'=5)+ 1/81 : (s'=36) & (o'=5)+ 1/81 : (s'=37) & (o'=5)+ 1/81 : (s'=38) & (o'=5)+ 1/81 : (s'=39) & (o'=5)+ 1/81 : (s'=40) & (o'=5)+ 1/81 : (s'=41) & (o'=5)+ 1/81 : (s'=42) & (o'=5)+ 1/81 : (s'=43) & (o'=5)+ 1/81 : (s'=44) & (o'=5)+ 1/81 : (s'=45) & (o'=5)+ 1/81 : (s'=46) & (o'=5)+ 1/81 : (s'=47) & (o'=5)+ 1/81 : (s'=48) & (o'=5)+ 1/81 : (s'=49) & (o'=5)+ 1/81 : (s'=50) & (o'=5)+ 1/81 : (s'=51) & (o'=5)+ 1/81 : (s'=52) & (o'=5)+ 1/81 : (s'=53) & (o'=5)+ 1/81 : (s'=54) & (o'=5)+ 1/81 : (s'=55) & (o'=5)+ 1/81 : (s'=56) & (o'=5)+ 1/81 : (s'=57) & (o'=5)+ 1/81 : (s'=58) & (o'=5)+ 1/81 : (s'=59) & (o'=5)+ 1/81 : (s'=60) & (o'=5)+ 1/81 : (s'=61) & (o'=5)+ 1/81 : (s'=62) & (o'=5)+ 1/81 : (s'=63) & (o'=5)+ 1/81 : (s'=64) & (o'=5)+ 1/81 : (s'=65) & (o'=5)+ 1/81 : (s'=66) & (o'=5)+ 1/81 : (s'=67) & (o'=5)+ 1/81 : (s'=68) & (o'=5)+ 1/81 : (s'=69) & (o'=5)+ 1/81 : (s'=70) & (o'=5)+ 1/81 : (s'=71) & (o'=5)+ 1/81 : (s'=72) & (o'=5)+ 1/81 : (s'=73) & (o'=5)+ 1/81 : (s'=74) & (o'=5)+ 1/81 : (s'=75) & (o'=5)+ 1/81 : (s'=76) & (o'=5)+ 1/81 : (s'=77) & (o'=5)+ 1/81 : (s'=78) & (o'=5)+ 1/81 : (s'=79) & (o'=6)+ 1/81 : (s'=80) & (o'=6);

	[east] s=0 -> 1:(s'=1) & (o'=2);
	[west] s=0 -> (s'=0);
	[north] s=0 -> (s'=0);
	[south] s=0 -> 1:(s'=5) & (o'=5);

	[east] s=1 -> 1:(s'=2) & (o'=3);
	[west] s=1 -> 1:(s'=0) & (o'=1);
	[north] s=1 -> (s'=1);
	[south] s=1 -> (s'=1);

	[east] s=2 -> 1:(s'=3) & (o'=2);
	[west] s=2 -> 1:(s'=1) & (o'=2);
	[north] s=2 -> (s'=2);
	[south] s=2 -> 1:(s'=6) & (o'=5);

	[east] s=3 -> 1:(s'=4) & (o'=4);
	[west] s=3 -> 1:(s'=2) & (o'=3);
	[north] s=3 -> (s'=3);
	[south] s=3 -> (s'=3);

	[east] s=4 -> (s'=4);
	[west] s=4 -> 1:(s'=3) & (o'=2);
	[north] s=4 -> (s'=4);
	[south] s=4 -> 1:(s'=7) & (o'=5);

	[east] s=5 -> (s'=5);
	[west] s=5 -> 1:(s'=5);
	[north] s=5 -> (s'=0) & (o'=1);
	[south] s=5 -> 1:(s'=8) & (o'=down_obs_side) ;

	[east] s=6 -> (s'=6);
	[west] s=6 -> 1:(s'=6);
	[north] s=6 -> (s'=2) & (o'=3);
	[south] s=6 -> 1:(s'=9) & (o'=down_obs_center) ;

	[east] s=7 -> (s'=7);
	[west] s=7 -> 1:(s'=7);
	[north] s=7 -> (s'=4) & (o'=4);
	[south] s=7 -> 1:(s'=10) & (o'=down_obs_side);

	[east] bottom_left -> (s'=s);
	[west] bottom_left -> 1:(s'=s);
	[north] bottom_left -> (s'=s-3) & (o'=5);
	[south] bottom_left -> 1:(s'=s);

	[east] bottom_right -> (s'=s);
	[west] bottom_right -> 1:(s'=s);
	[north] bottom_right -> (s'=s-3) & (o'=5);
	[south] bottom_right -> 1:(s'=s);

	[east] above_left -> (s'=s);
	[west] above_left -> 1:(s'=s);
	[north] above_left -> (s'=s-3) & (o'=5);
	[south] above_left -> 1:(s'=s+3) & (o'=6);

	[east] above_right -> (s'=s);
	[west] above_right -> 1:(s'=s);
	[north] above_right -> (s'=s-3) & (o'=5);
	[south] above_right -> 1:(s'=s+2) & (o'=6);

	[east] above_center -> (s'=s);
	[west] above_center -> 1:(s'=s);
	[north] above_center -> (s'=s-3) & (o'=5);
	[south] above_center -> 1:(s'=s+4) & (o'=7);

	[east] inside_tunnel-> 1:(s'=s);
	[west] inside_tunnel-> 1:(s'=s);
	[north] inside_tunnel -> 1:(s'=s-3);
	[south] inside_tunnel -> 1:(s'=s+3);
endmodule

rewards
	s<82: 1;
endrewards
label "goal" = o=7;
label "bad" = o=6;
